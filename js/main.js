console.log("üöÄ main.js loaded th√†nh c√¥ng!");
let editingMaNV = null; // n·∫øu null => ƒëang th√™m m·ªõi, c√≥ gi√° tr·ªã => ƒëang s·ª≠a

// Hi·ªÉn th·ªã ng√†y hi·ªán t·∫°i
document.getElementById('currentDate').textContent = new Date().toLocaleDateString('vi-VN', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});

async function loadSelectPhongBan() {
    const res = await fetch("api/get_phongban.php");
    const data = await res.json();
          

    const select = document.getElementById("selectPhongBan");
    select.innerHTML = '<option value="">-- Ch·ªçn ph√≤ng ban --</option>';

    data.forEach(pb => {
        const option = document.createElement("option");
        option.value = pb.MaPB;
        option.textContent = pb.TenPhongBan;
        select.appendChild(option); 
    });
}

async function loadSelectFilterPhongBan() {
    const res = await fetch("api/get_phongban.php");
    const data = await res.json();
    const select = document.getElementById("filterPhongBanLuong");
    select.innerHTML = '<option value="">T·∫•t c·∫£ ph√≤ng ban</option>';

    data.forEach(pb => {
        const option = document.createElement("option");
        option.value = pb.MaPB;
        option.textContent = pb.TenPhongBan;
        select.appendChild(option);
    });
}


async function loadSelectNhanVien() {
    const res = await fetch("api/get_nhanvien.php");
    const data = await res.json();
    const selectForm = document.getElementById("selectNhanVien");
    const selectFilter = document.getElementById("filterNhanVienCC");
    
    if (selectForm) selectForm.innerHTML = '<option value="">-- Ch·ªçn nh√¢n vi√™n --</option>';
    if (selectFilter) selectFilter.innerHTML = '<option value="">T·∫•t c·∫£</option>';

     // Duy·ªát danh s√°ch nh√¢n vi√™n
        data.nhanvien.forEach(nv => {
            // Option cho form
            if (selectForm) {
                const opt1 = document.createElement("option");
                opt1.value = nv.MaNV;
                opt1.textContent = nv.HoTen;
                selectForm.appendChild(opt1);
            }

            // Option cho filter
            if (selectFilter) {
                const opt2 = document.createElement("option");
                opt2.value = nv.MaNV;
                opt2.textContent = nv.HoTen;
                selectFilter.appendChild(opt2);
            }
        });
}


// Menu Navigation
document.querySelectorAll('.menu-item').forEach(item => {
    item.addEventListener('click', function() {
        const section = this.getAttribute('data-section');
        
        document.querySelectorAll('.menu-item').forEach(m => m.classList.remove('active'));
        this.classList.add('active');
        
        document.querySelectorAll('.content-section').forEach(s => s.classList.remove('active'));
        document.getElementById(section).classList.add('active');
        
        const titles = {
            dashboard: 'Dashboard',
            nhanvien: 'Qu·∫£n L√Ω Nh√¢n Vi√™n',
            phongban: 'Qu·∫£n L√Ω Ph√≤ng Ban',
            chamcong: 'Ch·∫•m C√¥ng & ƒêi·ªÉm Danh',
            luong: 'Qu·∫£n L√Ω L∆∞∆°ng & Th∆∞·ªüng',
        };
        document.getElementById('pageTitle').textContent = titles[section];
    });
});

document.addEventListener("DOMContentLoaded", () => {
    loadPhongBan();
    loadNhanVien();
    loadChamCong();
    loadSelectPhongBan();
    loadSelectFilterPhongBan();
    loadSelectNhanVien();
    filterChamCong();
    handleLoadLuong()

    // G·ª≠i form th√™m/ch·ªânh s·ª≠a nh√¢n vi√™n
    document.getElementById("btnThemNhanVien").addEventListener("click", async (e) => {
        e.preventDefault();

        const form = document.getElementById("formNhanVien");
        const formData = new FormData(form);

        // N·∫øu ƒëang ch·ªânh s·ª≠a th√¨ th√™m MaNV v√†o formData ƒë·ªÉ backend bi·∫øt
        if (editingMaNV) {
            formData.append("MaNV", editingMaNV);
        }

        const apiUrl = editingMaNV ? "api/edit_nhanvien.php" : "api/add_nhanvien.php";
        const actionText = editingMaNV ? "C·∫≠p nh·∫≠t" : "Th√™m";

        try {
            const response = await fetch(apiUrl, {
                method: "POST",
                body: formData
            });

            const result = await response.json();
            console.log(`K·∫øt qu·∫£ ${actionText}:`, result);

            if (result.success) {
                alert(`${actionText} nh√¢n vi√™n th√†nh c√¥ng!`);
                form.reset();
                editingMaNV = null;
                document.getElementById("btnThemNhanVien").innerHTML = "<span>‚ûï</span> Th√™m Nh√¢n Vi√™n";
                loadNhanVien();
            } else {
                alert(`‚ùå L·ªói ${actionText.toLowerCase()} nh√¢n vi√™n: ${result.error || "Kh√¥ng r√µ l·ªói"}`);
            }
        } catch (error) {
            console.error("L·ªói khi g·ª≠i d·ªØ li·ªáu:", error);
            alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
        }
    });

    // G·ª≠i form t√≠nh l∆∞∆°ng
    document.getElementById('btnTinhLuong').addEventListener('click', async () => {
        const form = document.getElementById('formTinhLuong');
        const formData = new FormData(form);

        const thang = formData.get("Thang");
        const nam = formData.get("Nam");

        try {
            const response = await fetch('api/tinh_luong.php', {
                method: 'POST',
                body: formData
            });
            const result = await response.json();
            console.log(result);

            // Sau khi t√≠nh xong c√≥ th·ªÉ load l·∫°i danh s√°ch l∆∞∆°ng
            loadLuong(thang, nam); 
        } catch (error) {
            console.error("L·ªói:", error);
            alert("ƒê√£ x·∫£y ra l·ªói khi t√≠nh l∆∞∆°ng!");
        }
    });

    // G·ª≠i form ch·∫•m c√¥ng
    document.getElementById("btnThemChamCong").addEventListener("click", async () => {
    const form = document.getElementById("formChamCong");
    const formData = new FormData(form);
    const btn = document.getElementById("btnThemChamCong");

    const isEdit = btn.dataset.editMode === "true";
    const apiUrl = isEdit ? "api/edit_chamcong.php" : "api/add_chamcong.php";

    try {
        const res = await fetch(apiUrl, {
            method: "POST",
            body: formData
        });

        const result = await res.json();

        if (result.success) {
            alert("‚úÖ " + result.message);
            form.reset();
            document.getElementById("gioVao").value = "08:00";
            document.getElementById("gioRa").value = "17:00";
            document.getElementById("gioLam").value = "8";

            // Reset n√∫t l·∫°i v·ªÅ ch·∫ø ƒë·ªô th√™m
            btn.innerHTML = `<span>üíæ</span> L∆∞u Ch·∫•m C√¥ng`;
            delete btn.dataset.editMode;
        } else {
            alert("‚ùå " + result.message);
        }

        loadChamCong();
    } catch (error) {
        alert("üö® L·ªói khi g·ª≠i y√™u c·∫ßu: " + error.message);
    }
});
});

document.addEventListener('DOMContentLoaded', () => {
  const quySelect = document.getElementById('Quy');
  const namInput = document.getElementById('Nam');

  // G√°n qu√Ω hi·ªán t·∫°i m·∫∑c ƒë·ªãnh
  const month = new Date().getMonth() + 1;
  const quyHienTai = Math.ceil(month / 3);
  quySelect.value = quyHienTai;

  // Render bi·ªÉu ƒë·ªì l·∫ßn ƒë·∫ßu
  taiBieuDo();

  // Khi user ƒë·ªïi qu√Ω ho·∫∑c nƒÉm -> render l·∫°i chart
  quySelect.addEventListener('change', taiBieuDo);
  namInput.addEventListener('change', taiBieuDo);
});


async function loadPhongBan() {
    const res = await fetch("api/get_phongban.php");
    const data = await res.json();
    const select = document.getElementById("tablePhongBan");
    data.forEach(pb => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${pb.MaPB}</td>
            <td>${pb.TenPhongBan}</td>
            <td>${pb.MoTa}</td>
            <td>${pb.NgayTao}</td>
            <td><button class="btn-edit" onclick="editPhongBan('${pb.MaPB}')">‚úèÔ∏è</button></td>
        `;
        select.appendChild(tr);
    });
}

async function loadNhanVien() {
    const res = await fetch("api/get_nhanvien.php");
    const data = await res.json();
       const nhanviens = data.nhanvien;
    const tbody = document.getElementById("tableNhanVien");
    tbody.innerHTML = "";
    nhanviens.forEach(nv => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${nv.MaNV}</td>
            <td>${nv.HoTen}</td>
            <td>${nv.TenPhongBan || "-"}</td>
            <td>${Number(nv.LuongCB).toLocaleString()} ‚Ç´</td>
            <td>${nv.SDT || ""}</td>
            <td>${nv.NgaySinh || "-"}</td>
            <td>${nv.NgayVaoLam || "-"}</td>
            <td>${nv.TrangThai}</td>
            <td><button class="btn-edit" onclick="editNhanVien('${nv.MaNV}')">‚úèÔ∏è</button></td>
        `;
        tbody.appendChild(tr);
    });
}

async function editNhanVien(MaNV) {
    try {
        const response = await fetch(`api/get_nhanvien.php?MaNV=${MaNV}`);
        const data = await response.json();

        if (!data.success || !data.nhanvien) {
            alert("‚ùå Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu nh√¢n vi√™n!");
            return;
        }

        const nv = data.nhanvien;
        console.log("üß© D·ªØ li·ªáu nh√¢n vi√™n:", nv);

        // G√°n d·ªØ li·ªáu l√™n form
        document.querySelector("input[name='MaNV']").value = nv.MaNV;
        document.querySelector("input[name='TenNV']").value = nv.HoTen;
        document.querySelector("select[name='MaPB']").value = nv.MaPB || "";
        document.querySelector("input[name='LuongCoBan']").value = nv.LuongCB || 0;
        document.querySelector("input[name='NgaySinh']").value = nv.NgaySinh || "";
        document.querySelector("input[name='NgayVaoLam']").value = nv.NgayVaoLam || "";
        document.querySelector("input[name='SoDienThoai']").value = nv.SDT || "";
        document.querySelector("input[name='DiaChi']").value = nv.DiaChi || "";

        // L∆∞u tr·∫°ng th√°i ƒëang edit
        editingMaNV = nv.MaNV;

        // ƒê·ªïi n√∫t th√†nh ‚ÄúL∆∞u ch·ªânh s·ª≠a‚Äù
        document.getElementById("btnThemNhanVien").innerHTML = "<span>üíæ</span> L∆∞u Ch·ªânh S·ª≠a";
    } catch (err) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu nh√¢n vi√™n:", err);
        alert("Kh√¥ng th·ªÉ t·∫£i th√¥ng tin nh√¢n vi√™n ƒë·ªÉ ch·ªânh s·ª≠a!");
    }
}

async function loadChamCong() {
    try {
        const res = await fetch("api/get_chamcong.php");
        const data = await res.json();
        const tbody = document.getElementById("tableChamCong");
        tbody.innerHTML = "";

        data.forEach((cc, index) => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td>${cc.Ngay}</td>
                <td>${cc.MaNV}</td>
                <td>${cc.HoTen || "-"}</td>
                <td>${cc.GioVao || "-"}</td>
                <td>${cc.GioRa || "-"}</td>
                <td>${cc.GioLam || "0"}</td>
                <td>${cc.LoaiCong || "-"}</td>
                <td>${cc.TrangThai || "-"}</td>
                <td>${cc.GhiChu || ""}</td>
                <td>
                    <button class="btn-edit" onclick="editChamCong('${cc.MaNV}', '${cc.Ngay}')">‚úèÔ∏è</button>
                    <button class="btn-delete" onclick="deleteChamCong('${cc.MaNV}', '${cc.Ngay}')">üóëÔ∏è</button>
                </td>
                
            `;
            tbody.appendChild(tr);
        });
    } catch (error) {
        console.error("L·ªói load ch·∫•m c√¥ng:", error);
    }
}

async function editChamCong(maNV, ngay) {
    try {
        const res = await fetch(`api/get_chamcong.php?MaNV=${maNV}&Ngay=${ngay}`);
        const data = await res.json();

        // t√¨m d√≤ng ch·∫•m c√¥ng c·∫ßn s·ª≠a
        const record = data.find(cc => cc.MaNV === maNV && cc.Ngay === ngay);
        if (!record) return alert("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ch·∫•m c√¥ng!");

        // G√°n d·ªØ li·ªáu v√†o form
         // N·∫øu ch∆∞a load danh s√°ch nh√¢n vi√™n th√¨ ch·ªù load xong m·ªõi g√°n
        const select = document.getElementById("selectNhanVien");

        // ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ ch·∫Øc ch·∫Øn select c√≥ ƒë·∫ßy ƒë·ªß option (n·∫øu load async)
        if (select.options.length <= 1) {
            await loadNhanVien(); // g·ªçi l·∫°i API load nh√¢n vi√™n
        }

        // G√°n gi√° tr·ªã cho form
        select.value = record.MaNV;
        document.querySelector('[name="Ngay"]').value = record.Ngay;
        document.querySelector('[name="GioVao"]').value = record.GioVao;
        document.querySelector('[name="GioRa"]').value = record.GioRa;
        document.querySelector('[name="GioLam"]').value = record.GioLam;
        document.querySelector('[name="LoaiCong"]').value = record.LoaiCong;
        document.querySelector('[name="GhiChu"]').value = record.GhiChu;

        // ƒë·ªïi text n√∫t
        const btn = document.getElementById("btnThemChamCong");
        btn.innerHTML = `<span>üíæ</span> C·∫≠p Nh·∫≠t Ch·∫•m C√¥ng`;
        btn.dataset.editMode = "true"; // ƒë√°nh d·∫•u ƒëang ·ªü ch·∫ø ƒë·ªô edit
    } catch (err) {
        alert("L·ªói khi t·∫£i d·ªØ li·ªáu ch·∫•m c√¥ng: " + err.message);
    }
}

async function deleteChamCong(maNV, ngay) {
    if (!confirm("‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën xo√° ch·∫•m c√¥ng n√†y kh√¥ng?")) return;

    try {
        const res = await fetch("api/delete_chamcong.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
            },
            body: `MaNV=${encodeURIComponent(maNV)}&Ngay=${encodeURIComponent(ngay)}`
        });

        const result = await res.json();

        if (result.success) {
            alert("‚úÖ " + result.message);
            loadChamCong(); // reload l·∫°i danh s√°ch
        } else {
            alert("‚ùå " + result.message);
        }
    } catch (error) {
        alert("üö® L·ªói khi xo√°: " + error.message);
    }
}

async function filterChamCong() {
    try {
        const thang = document.getElementById("filterThangCC")?.value || "";
        const nam = document.getElementById("filterNamCC")?.value || "";
        const maNV = document.getElementById("filterNhanVienCC")?.value || "";
        const loaiCong = document.getElementById("filterLoaiCong")?.value || "";

        const params = new URLSearchParams({
            Thang: thang,
            Nam: nam,
            MaNV: maNV,
            LoaiCong: loaiCong
        });

        const res = await fetch(`api/get_chamcong.php?${params.toString()}`);
        const data = await res.json();

        const tbody = document.getElementById("tableChamCong");
        tbody.innerHTML = "";

        if (data.length === 0) {
            tbody.innerHTML = `<tr><td colspan="10" style="text-align:center;">Kh√¥ng c√≥ d·ªØ li·ªáu ph√π h·ª£p ü´†</td></tr>`;
            return;
        }

        data.forEach(cc => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
                <td>${cc.Ngay}</td>
                <td>${cc.MaNV}</td>
                <td>${cc.HoTen || "-"}</td>
                <td>${cc.GioVao || "-"}</td>
                <td>${cc.GioRa || "-"}</td>
                <td>${cc.GioLam || "0"}</td>
                <td>${cc.LoaiCong || "-"}</td>
                <td>${cc.TrangThai || "-"}</td>
                <td>${cc.GhiChu || ""}</td>
                <td>
                    <button class="btn-edit" onclick="editChamCong('${cc.MaNV}', '${cc.Ngay}')">‚úèÔ∏è</button>
                    <button class="btn-delete" onclick="deleteChamCong('${cc.MaNV}', '${cc.Ngay}')">üóëÔ∏è</button>
                </td>
            `;
            tbody.appendChild(tr);
        });
    } catch (error) {
        console.error("‚ö†Ô∏è L·ªói khi l·ªçc ch·∫•m c√¥ng:", error);
        alert("üö® C√≥ l·ªói khi l·ªçc d·ªØ li·ªáu!");
    }
}

// üì• Load l∆∞∆°ng chi ti·∫øt t·ª´ng nh√¢n vi√™n
async function loadLuong(thang, nam) {
    try {
        const res = await fetch(`api/get_luong.php?Thang=${thang}&Nam=${nam}`);
        const data = await res.json();

        renderBangChiTiet(data);

    } catch (error) {
        console.error("L·ªói load l∆∞∆°ng:", error);
    }
}

// üì• Load l∆∞∆°ng t·ªïng h·ª£p theo ph√≤ng ban
async function loadLuongPhongBan(thang, nam, maPB) {
    try {
        const res = await fetch(`api/get_luong_phongban.php?Thang=${thang}&Nam=${nam}&MaPB=${maPB}`);
        const data = await res.json();

        renderBangPhongBan(data);

    } catch (error) {
        console.error("L·ªói load l∆∞∆°ng ph√≤ng ban:", error);
    }
}

async function handleLoadLuong() {
    const thang = document.getElementById("filterThangLuong").value;
    const nam = document.getElementById("filterNamLuong").value;
    const maPB = document.getElementById("filterPhongBanLuong").value;

    if (maPB === "" || maPB === "all") {
        // Hi·ªÉn th·ªã chi ti·∫øt t·∫•t c·∫£ nh√¢n vi√™n
        await loadLuong(thang, nam);
    } else {
        // Gom nh√≥m theo ph√≤ng ban
        await loadLuongPhongBan(thang, nam, maPB);
    }
}

// üßæ Render b·∫£ng chi ti·∫øt t·ª´ng nh√¢n vi√™n
function renderBangChiTiet(data) {
    const table = document.getElementById("tableSalary");
    const thead = table.querySelector("thead");
    const tbody = document.getElementById("tableLuong");
    const tfoot = table.querySelector("tfoot");

    // üëâ C·∫≠p nh·∫≠t header ƒë√∫ng c·∫•u tr√∫c
    thead.innerHTML = `
        <tr>
            <th>STT</th>
            <th>M√£ NV</th>
            <th>H·ªç T√™n</th>
            <th>Ph√≤ng Ban</th>
            <th>L∆∞∆°ng CB</th>
            <th>T·ªïng s·ªë gi·ªù</th>
            <th>TƒÉng Ca</th>
            <th>Th∆∞·ªüng</th>
            <th>Ph·ª• C·∫•p</th>
            <th>Kh·∫•u Tr·ª´</th>
            <th>T·ªïng L∆∞∆°ng</th>
            <th>Thao T√°c</th>
        </tr>
    `;

    tfoot.style.display = ""; // hi·ªán t·ªïng c·ªông
    tbody.innerHTML = "";

    let tongLuongCB = 0, tongGioLam = 0, tongTangCa = 0, tongThuong = 0, tongPhuCap = 0, tongKhauTru = 0, tongTongLuong = 0;

    data.forEach((l, i) => {
        tongLuongCB += Number(l.LuongCB);
        tongGioLam += Number(l.TongGioLam);
        tongTangCa += Number(l.TangCa);
        tongThuong += Number(l.Thuong);
        tongPhuCap += Number(l.PhuCap);
        tongKhauTru += Number(l.KhauTru);
        tongTongLuong += Number(l.TongLuong);

        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${i + 1}</td>
            <td>${l.MaNV}</td>
            <td>${l.HoTen}</td>
            <td>${l.TenPhongBan || "-"}</td>
            <td>${Number(l.LuongCB).toLocaleString()} ‚Ç´</td>
            <td>${Number(l.TongGioLam).toLocaleString()}</td>
            <td>${Number(l.TangCa).toLocaleString()} ‚Ç´</td>
            <td>${Number(l.Thuong).toLocaleString()} ‚Ç´</td>
            <td>${Number(l.PhuCap).toLocaleString()} ‚Ç´</td>
            <td>${Number(l.KhauTru).toLocaleString()} ‚Ç´</td>
            <td style="font-weight:bold; color:#dc3545">${Number(l.TongLuong).toLocaleString()} ‚Ç´</td>
            <td><button class="btn-edit" onclick="editLuong('${l.MaNV}')">‚úèÔ∏è</button></td>
        `;
        tbody.appendChild(tr);
    });

    // Footer t·ªïng c·ªông
    document.getElementById("footerLuongCB").textContent = tongLuongCB.toLocaleString() + "ƒë";
    document.getElementById("footerTheoGio").textContent = tongGioLam.toLocaleString();
    document.getElementById("footerTangCa").textContent = tongTangCa.toLocaleString() + "ƒë";
    document.getElementById("footerThuong").textContent = tongThuong.toLocaleString() + "ƒë";
    document.getElementById("footerPhuCap").textContent = tongPhuCap.toLocaleString() + "ƒë";
    document.getElementById("footerKhauTru").textContent = tongKhauTru.toLocaleString() + "ƒë";
    document.getElementById("footerTotal").textContent = tongTongLuong.toLocaleString() + "ƒë";
}


// üß© Render b·∫£ng gom nh√≥m theo ph√≤ng ban
function renderBangPhongBan(data) {
    const table = document.getElementById("tableSalary");
    const thead = table.querySelector("thead");
    const tbody = document.getElementById("tableLuong");
    const tfoot = table.querySelector("tfoot");

    // üëâ Thay header m·ªõi
    thead.innerHTML = `
        <tr>
            <th>STT</th>
            <th>M√£ Ph√≤ng Ban</th>
            <th>Ph√≤ng Ban</th>
            <th>S·ªë Nh√¢n Vi√™n</th>
            <th>T·ªïng L∆∞∆°ng</th>
        </tr>
    `;

    tfoot.style.display = "none"; // ·∫©n t·ªïng chi ti·∫øt
    tbody.innerHTML = "";

    data.forEach((item, i) => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${i + 1}</td>
            <td>${item.MaPB}</td>
            <td>${item.TenPhongBan}</td>
            <td>${item.SoNhanVien}</td>
            <td style="font-weight:bold; color:#dc3545">${Number(item.TongLuong).toLocaleString()} ‚Ç´</td>
        `;
        tbody.appendChild(tr);
    });
}

const gioVaoInput = document.getElementById("gioVao");
const gioRaInput = document.getElementById("gioRa");
const gioLamInput = document.getElementById("gioLam");

  function tinhGioLam() {
    const gioVao = gioVaoInput.value;
    const gioRa = gioRaInput.value;

    if (!gioVao || !gioRa) return;

    let [vaoH, vaoM] = gioVao.split(":").map(Number);
    let [raH, raM] = gioRa.split(":").map(Number);

    const vaoPhut = vaoH * 60 + vaoM;
    const raPhut = raH * 60 + raM;

    let minutes = 0;

    if (vaoPhut >= 17 * 60) {
        // L√†m tƒÉng ca (b·∫Øt ƒë·∫ßu sau 5h chi·ªÅu) => t√≠nh gi·ªù b√¨nh th∆∞·ªùng
        if (raPhut < vaoPhut) {
        // qua ng√†y h√¥m sau
        minutes = (24 * 60 - vaoPhut) + raPhut;
        } else {
        minutes = raPhut - vaoPhut;
        }
    } else {
    // üîπ L√†m gi·ªù h√†nh ch√≠nh
    // Gi·ªõi h·∫°n gi·ªù v√†o s·ªõm nh·∫•t l√† 08:00
    if (vaoH < 8) {
      vaoH = 8;
      vaoM = 0;
    }

    // Gi·ªõi h·∫°n gi·ªù ra t·ªëi ƒëa l√† 17:00
    if (raH > 17 || (raH === 17 && raM > 0)) {
      raH = 17;
      raM = 0;
    }
  }

    let start = vaoH * 60 + vaoM;
    let end = raH * 60 + raM;

    // N·∫øu gi·ªù ra nh·ªè h∆°n gi·ªù v√†o -> qua ng√†y h√¥m sau
    if (end < start) end += 24 * 60;

    minutes = end - start;

     // Tr·ª´ 1 ti·∫øng ngh·ªâ tr∆∞a n·∫øu l√†m qua khung gi·ªù 12h‚Äì13h
    if (start < 12 * 60 && end > 13 * 60) {
        minutes -= 60;
    }

    const hours = (minutes / 60).toFixed(1); // l√†m tr√≤n 1 ch·ªØ s·ªë th·∫≠p ph√¢n
    gioLamInput.value = hours;
  }

  gioVaoInput.addEventListener("change", tinhGioLam);
  gioRaInput.addEventListener("change", tinhGioLam);


async function taiBieuDo() {
  const quy = document.getElementById('Quy').value;
  const nam = document.getElementById('Nam').value;

  if (!quy) {
    if (window.luongChart) { window.luongChart.destroy(); window.luongChart = null; }
    return; // ch∆∞a ch·ªçn qu√Ω => x√≥a chart n·∫øu c√≥
  }

  try {
    const res = await fetch(`api/chart_luong_quy.php?quy=${encodeURIComponent(quy)}&nam=${encodeURIComponent(nam)}`);
    if (!res.ok) throw new Error('L·∫•y d·ªØ li·ªáu th·∫•t b·∫°i!');
    const data = await res.json();

    const ctx = document.getElementById('chartLuong').getContext('2d');

    // ph√° bi·ªÉu ƒë·ªì c≈© n·∫øu c√≥
    if (window.luongChart) window.luongChart.destroy();

    if (!data.length) {
      alert('Kh√¥ng c√≥ d·ªØ li·ªáu cho qu√Ω n√†y!');
      return;
    }

    const labels = data.map(item => 'Th√°ng ' + item.Thang);
    const luong = data.map(item => Number(item.TongLuongThang) || 0);

    window.luongChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: labels,
        datasets: [{
          label: 'T·ªïng l∆∞∆°ng theo th√°ng (VNƒê)',
          data: luong,
          backgroundColor: 'rgba(54, 162, 235, 0.6)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 2
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: { position: 'top' },
          title: {
            display: true,
            text: `Th·ªëng k√™ l∆∞∆°ng Qu√Ω ${quy} nƒÉm ${nam}`
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: value => value.toLocaleString('vi-VN')
            }
          }
        }
      }
    });

  } catch (error) {
    console.error(error);
    alert('L·ªói khi t·∫£i d·ªØ li·ªáu!');
  }
}